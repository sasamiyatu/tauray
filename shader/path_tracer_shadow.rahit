#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable

hitAttributeEXT vec2 attribs;

#define SCENE_DATA_BUFFER_BINDING 1
#define VERTEX_BUFFER_BINDING 2
#define INDEX_BUFFER_BINDING 3
#define TEXTURE_ARRAY_BINDING 4
#include "rt.glsl"

#include "ggx.glsl"

layout(location = 1) rayPayloadInEXT float shadow_visibility;

void main()
{
    vec3 view = gl_WorldRayDirectionEXT;
    int instance_id = gl_InstanceCustomIndexEXT + gl_GeometryIndexEXT;
    material mat = scene.o[instance_id].mat;

    vec2 uv;
    get_interpolated_vertex_light(view, attribs, instance_id, gl_PrimitiveID, uv);

    float alpha = mat.albedo_factor.a;
    if(mat.albedo_tex_id >= 0)
        alpha *= texture(textures[nonuniformEXT(mat.albedo_tex_id)], uv).a;

    shadow_visibility *= 1.0f-alpha;
    if(shadow_visibility == 0.0f) terminateRayEXT;
    else ignoreIntersectionEXT;
}
